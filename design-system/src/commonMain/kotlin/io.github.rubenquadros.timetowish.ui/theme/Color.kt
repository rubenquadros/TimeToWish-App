package io.github.rubenquadros.timetowish.ui.theme

import androidx.compose.material3.ColorScheme
import androidx.compose.runtime.Immutable
import androidx.compose.ui.graphics.Color

@Immutable
data class TWColors(
    val primary: Color,
    val onPrimary: Color,
    val primaryContainer: Color,
    val onPrimaryContainer: Color,
    val secondary: Color,
    val onSecondary: Color,
    val secondaryContainer: Color,
    val onSecondaryContainer: Color,
    val tertiary: Color,
    val onTertiary: Color,
    val tertiaryContainer: Color,
    val onTertiaryContainer: Color,
    val disabled: Color,
    val disabledVariant: Color,
    val onDisabled: Color,
    val error: Color,
    val onError: Color,
    val errorContainer: Color,
    val onErrorContainer: Color,
    val surface: Color,
    val surfaceContainer: Color,
    val onSurface: Color,
    val outline: Color,
    val transparent: Color
)

internal val TWLightColorScheme = TWColors(
    primary = Color(0xFF8F4A4C),
    onPrimary = Color(0xFFFFFFFF),
    primaryContainer = Color(0xFFFFDAD9),
    onPrimaryContainer = Color(0xFF3B080D),
    secondary = Color(0xFF775656),
    onSecondary = Color(0xFFFFFFFF),
    secondaryContainer = Color(0xFFFFDAD9),
    onSecondaryContainer = Color(0xFF2C1515),
    tertiary = Color(0xFF755A2F),
    onTertiary = Color(0xFFFFFFFF),
    tertiaryContainer = Color(0xFFFFDDAF),
    onTertiaryContainer = Color(0xFF281800),
    disabled = Color(0xFFD9D9D9),
    disabledVariant = Color(0xFFF2F2F2),
    onDisabled = Color(0xFF949494),
    error = Color(0xFFBA1A1A),
    onError = Color(0xFFFFFFFF),
    errorContainer = Color(0xFFFFDAD6),
    onErrorContainer = Color(0xFF410002),
    surface = Color(0xFFFFF8F7),
    surfaceContainer = Color(0xFFFCEAE9),
    onSurface = Color(0xFF221919),
    outline = Color(0xFF857372),
    transparent = Color.Transparent
)

internal val TWDarkColorScheme = TWColors(
    primary = Color(0xFFFFB3B3),
    onPrimary = Color(0xFF561D20),
    primaryContainer = Color(0xFF733335),
    onPrimaryContainer = Color(0xFFFFDAD9),
    secondary = Color(0xFFE6BDBC),
    onSecondary = Color(0xFF442929),
    secondaryContainer = Color(0xFF5D3F3F),
    onSecondaryContainer = Color(0xFFFFDAD9),
    tertiary = Color(0xFFE5C18D),
    onTertiary = Color(0xFF422C05),
    tertiaryContainer = Color(0xFF5B421A),
    onTertiaryContainer = Color(0xFFFFDDAF),
    disabled = Color(0xFF494949),
    disabledVariant = Color(0xFF262626),
    onDisabled = Color(0xFF7A7A7A),
    error = Color(0xFFFFB4AB),
    onError = Color(0xFF690005),
    errorContainer = Color(0xFF93000A),
    onErrorContainer = Color(0xFFFFDAD6),
    surface = Color(0xFF1A1111),
    surfaceContainer = Color(0xFF271D1D),
    onSurface = Color(0xFFF0DEDE),
    outline = Color(0xFFA08C8C),
    transparent = Color.Transparent
)

internal val LightColorScheme = ColorScheme(
    primary = Color(0xFF8F4A4C),
    onPrimary = Color(0xFFFFFFFF),
    primaryContainer = Color(0xFFFFDAD9),
    onPrimaryContainer = Color(0xFF3B080D),
    inversePrimary = Color(0xFFFFB3B3),
    secondary = Color(0xFF775656),
    onSecondary = Color(0xFFFFFFFF),
    secondaryContainer = Color(0xFFFFDAD9),
    onSecondaryContainer = Color(0xFF2C1515),
    tertiary = Color(0xFF755A2F),
    onTertiary = Color(0xFFFFFFFF),
    tertiaryContainer = Color(0xFFFFDDAF),
    onTertiaryContainer = Color(0xFF281800),
    background = Color(0xFFFFF8F7),
    onBackground = Color(0xFF221919),
    surface = Color(0xFFFFF8F7),
    onSurface = Color(0xFF221919),
    surfaceVariant = Color(0xFFF4DDDC),
    onSurfaceVariant = Color(0xFF524343),
    surfaceTint = Color(0xFF8F4A4C),
    inverseSurface = Color(0xFF382E2E),
    inverseOnSurface = Color(0xFFFFEDEC),
    error = Color(0xFFBA1A1A),
    onError = Color(0xFFFFFFFF),
    errorContainer = Color(0xFFFFDAD6),
    onErrorContainer = Color(0xFF410002),
    outline = Color(0xFF857372),
    outlineVariant = Color(0xFFD7C1C1),
    scrim = Color(0xFF000000),
    surfaceDim = Color(0xFFE8D6D5),
    surfaceBright = Color(0xFFFFF8F7),
    surfaceContainer = Color(0xFFFCEAE9),
    surfaceContainerLow = Color(0xFFFFF0EF),
    surfaceContainerLowest = Color(0xFFFFFFFF),
    surfaceContainerHigh = Color(0xFFF6E4E3),
    surfaceContainerHighest = Color(0xFFF0DEDE)
)

internal val DarkColorScheme = ColorScheme(
    primary = Color(0xFFFFB3B3),
    onPrimary = Color(0xFF561D20),
    primaryContainer = Color(0xFF733335),
    onPrimaryContainer = Color(0xFFFFDAD9),
    inversePrimary = Color(0xFF8F4A4C),
    secondary = Color(0xFFE6BDBC),
    onSecondary = Color(0xFF442929),
    secondaryContainer = Color(0xFF5D3F3F),
    onSecondaryContainer = Color(0xFFFFDAD9),
    tertiary = Color(0xFFE5C18D),
    onTertiary = Color(0xFF422C05),
    tertiaryContainer = Color(0xFF5B421A),
    onTertiaryContainer = Color(0xFFFFDDAF),
    background = Color(0xFF1A1111),
    onBackground = Color(0xFFF0DEDE),
    surface = Color(0xFF1A1111),
    onSurface = Color(0xFFF0DEDE),
    surfaceVariant = Color(0xFF524343),
    onSurfaceVariant = Color(0xFFD7C1C1),
    surfaceTint = Color(0xFFFFB3B3),
    inverseSurface = Color(0xFFF0DEDE),
    inverseOnSurface = Color(0xFF382E2E),
    error = Color(0xFFFFB4AB),
    onError = Color(0xFF690005),
    errorContainer = Color(0xFF93000A),
    onErrorContainer = Color(0xFFFFDAD6),
    outline = Color(0xFFA08C8C),
    outlineVariant = Color(0xFF524343),
    scrim = Color(0xFF000000),
    surfaceDim = Color(0xFF1A1111),
    surfaceBright = Color(0xFF423736),
    surfaceContainer = Color(0xFF271D1D),
    surfaceContainerLow = Color(0xFF221919),
    surfaceContainerLowest = Color(0xFF140C0C),
    surfaceContainerHigh = Color(0xFF322827),
    surfaceContainerHighest = Color(0xFF3D3232)
)